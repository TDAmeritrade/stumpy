trigger:
- main

pr:
- main

stages:
- stage: Unit

  jobs:
  - job: Test

    strategy:
      matrix:
        python36_linux:
          imageName: "ubuntu-latest"
          python.version: "3.6"
        python36_windows:
          imageName: "windows-latest"
          python.version: "3.6"
        python36_macos:
          imageName: "macos-latest"
          python.version: "3.6"
        python37_linux:
          imageName: "ubuntu-latest"
          python.version: "3.7"
        python37_windows:
          imageName: "windows-latest"
          python.version: "3.7"
        python37_macos:
          imageName: "macos-latest"
          python.version: "3.7"
        python38_linux:
          imageName: "ubuntu-latest"
          python.version: "3.8"
        python38_windows:
          imageName: "windows-latest"
          python.version: "3.8"
        python38_macos:
          imageName: "macos-latest"
          python.version: "3.8"
        # python39_linux:
        #   imageName: "ubuntu-latest"
        #   python.version: "3.9"
        # python39_windows:
        #   imageName: "windows-latest"
        #   python.version: "3.9"
        # python39_macos:
        #   imageName: "macos-latest"
        #   python.version: "3.9"
      maxParallel: 10

    pool:
      vmImage: $(imageName)

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - script: |
        pip install --editable .[ci]
        pip install pytest-azurepipelines
      displayName: 'Install stumpy and other dependencies'

    - script: |
        black --check --diff ./
      displayName: "Running black"

    - script: |
        flake8 ./
      displayName: "Running flake8"

    - bash: ./test.sh unit
      displayName: "Running unit tests"

- stage: Coverage

  jobs:
  - job: Test

    strategy:
      matrix:
        python36_linux:
          imageName: "ubuntu-latest"
          python.version: "3.6"
        python36_windows:
          imageName: "windows-latest"
          python.version: "3.6"
        python36_macos:
          imageName: "macos-latest"
          python.version: "3.6"
        python37_linux:
          imageName: "ubuntu-latest"
          python.version: "3.7"
        python37_windows:
          imageName: "windows-latest"
          python.version: "3.7"
        python37_macos:
          imageName: "macos-latest"
          python.version: "3.7"
        python38_linux:
          imageName: "ubuntu-latest"
          python.version: "3.8"
        python38_windows:
          imageName: "windows-latest"
          python.version: "3.8"
        python38_macos:
          imageName: "macos-latest"
          python.version: "3.8"
        # python39_linux:
        #   imageName: "ubuntu-latest"
        #   python.version: "3.9"
        # python39_windows:
        #   imageName: "windows-latest"
        #   python.version: "3.9"
        # python39_macos:
        #   imageName: "macos-latest"
        #   python.version: "3.9"
      maxParallel: 10
    pool:
      vmImage: $(imageName)

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - script: |
        pip install --editable .[ci]
        pip install pytest-azurepipelines
      displayName: 'Install stumpy and other dependencies'

    - script: |
        black --check --diff ./
      displayName: "Running black"

    - script: |
        flake8 ./
      displayName: "Running flake8"

    - bash: ./test.sh coverage
      displayName: "Running test coverage"

    # - script: |
    #     codecov --token=$(CODECOV_TOKEN)
    #   displayName: "Uploading test coverage results"

- stage: Scan
  displayName: "FOSSA"

  jobs:
  - job: FOSSA
    displayName: "Analyze OSS licenses with FOSSA cli"

    pool:
      vmImage: "ubuntu-16.04"

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
      displayName: 'Use Python 3.7'

    - script: |
        pip install --editable .[ci]
        pip install pytest-azurepipelines
      displayName: 'Install stumpy and other dependencies'

    - task: GoTool@0
      inputs:
        version: 1.10

    - bash: ./fossa.sh $(FOSSA_API_KEY)
